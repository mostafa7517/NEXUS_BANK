@{
    ViewData["Title"] = "Withdraw";
}








<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Withdraw Money</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@300;400;600;700&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Cairo', sans-serif;
            background: linear-gradient(135deg, #003366 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .withdraw-container {
            max-width: 450px;
            width: 100%;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 24px;
            padding: 40px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.1);
            position: relative;
            overflow: hidden;
            margin-left: 33%;
        }

            .withdraw-container::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 4px;
                background: linear-gradient(90deg, #003366, #0066cc, #003366);
                background-size: 200% 100%;
                animation: shimmer 2s ease-in-out infinite;
            }

       

        .header {
            text-align: center;
            margin-bottom: 35px;
        }

        .header-icon {
            width: 80px;
            height: 80px;
            background: linear-gradient(135deg, #003366, #0066cc);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 20px;
            box-shadow: 0 10px 30px rgba(0, 51, 102, 0.3);
            animation: pulse 2s infinite;
        }

        

        .header-icon i {
            font-size: 2rem;
            color: white;
        }

        .header h2 {
            color: #003366;
            font-size: 1.8rem;
            font-weight: 700;
            margin-bottom: 8px;
        }

        .header p {
            color: #666;
            font-size: 0.95rem;
        }

        .form-group {
            margin-bottom: 25px;
            position: relative;
        }

        .form-label {
            display: block;
            color: #003366;
            font-weight: 600;
            margin-bottom: 8px;
            font-size: 0.95rem;
        }

        .input-wrapper {
            position: relative;
            border-radius: 16px;
            background: #f8f9ff;
            border: 2px solid transparent;
            transition: all 0.3s ease;
            overflow: hidden;
        }

            .input-wrapper:hover {
                background: #f0f4ff;
                transform: translateY(-1px);
                box-shadow: 0 8px 25px rgba(0, 51, 102, 0.1);
            }

            .input-wrapper.focused {
                border-color: #003366;
                background: white;
                box-shadow: 0 0 0 4px rgba(0, 51, 102, 0.1);
            }

        .currency-symbol {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #003366;
            font-weight: 700;
            font-size: 1.2rem;
            z-index: 2;
        }

        .amount-input {
            width: 100%;
            padding: 18px 45px 18px 20px;
            border: none;
            background: transparent;
            font-size: 1.1rem;
            font-weight: 600;
            color: #003366;
            outline: none;
            transition: all 0.3s ease;
        }

            .amount-input::placeholder {
                color: #999;
                font-weight: 400;
            }

            .amount-input:focus {
                color: #003366;
            }

        .withdraw-btn {
            width: 100%;
            padding: 18px;
            border: none;
            border-radius: 16px;
            background: linear-gradient(135deg, #003366, #0066cc);
            color: white;
            font-size: 1.1rem;
            font-weight: 700;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            box-shadow: 0 8px 25px rgba(0, 51, 102, 0.3);
        }

            .withdraw-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 12px 35px rgba(0, 51, 102, 0.4);
            }

            .withdraw-btn:active {
                transform: translateY(0);
            }

            .withdraw-btn i {
                margin-right: 8px;
                transition: transform 0.3s ease;
            }

            .withdraw-btn:hover i {
                transform: translateX(5px);
            }

        .alert {
            margin-top: 25px;
            padding: 16px 20px;
            border-radius: 12px;
            border: 1px solid #ff4757;
            background: linear-gradient(135deg, #fff5f5, #ffe8e8);
            color: #d63031;
            font-weight: 500;
            position: relative;
            animation: slideDown 0.3s ease;
        }

       

        .alert i {
            margin-right: 8px;
            color: #d63031;
        }

        .close-btn {
            position: absolute;
            top: 8px;
            left: 12px;
            background: none;
            border: none;
            font-size: 1.2rem;
            color: #d63031;
            cursor: pointer;
            opacity: 0.7;
            transition: opacity 0.3s ease;
        }

            .close-btn:hover {
                opacity: 1;
            }

      
       
        .ripple-effect {
            position: relative;
            overflow: hidden;
        }

            .ripple-effect::before {
                content: '';
                position: absolute;
                top: 50%;
                left: 50%;
                width: 0;
                height: 0;
                border-radius: 50%;
                background: rgba(255, 255, 255, 0.3);
                transition: width 0.4s ease, height 0.4s ease;
                transform: translate(-50%, -50%);
                z-index: 1;
            }

            .ripple-effect:active::before {
                width: 300px;
                height: 300px;
            }
    </style>
</head>
<body>
    <div class="withdraw-container">
        <div class="header">
            <div class="header-icon">
                <i class="fas fa-money-bill-wave"></i>
            </div>
            <h2>Withdraw Money</h2>
            <p>Enter the amount you want to withdraw from your account</p>
        </div>
         <form asp-action="Withdraw" method="post"> 
            <div class="form-group">
                <label class="form-label">
                    <i class="fas fa-dollar-sign" style="margin-right: 5px;"></i>
                    Amount to Withdraw
                </label>
                <div class="input-wrapper" id="inputWrapper">
                    <span class="currency-symbol">$</span>
                    <input name="amount"
                           type="number"
                           step="0.01"
                           class="amount-input"
                           required
                           placeholder="Enter amount"
                           min="0.01"
                           id="amountInput" />
                </div>
            </div>

            <button type="submit" class="withdraw-btn ripple-effect" id="withdrawBtn">
                <i class="fas fa-arrow-down"></i>
                Withdraw Money
            </button>
        </form>
      

        <div class="alert" id="errorAlert" style="display: none;">
            <i class="fas fa-exclamation-circle"></i>
            <span id="errorMessage">An error occurred while processing your request</span>
            <button class="close-btn" onclick="closeAlert()">×</button>
        </div>
    </div>

    <script>
        // Input focus effects
        const inputWrapper = document.getElementById('inputWrapper');
        const amountInput = document.getElementById('amountInput');

        amountInput.addEventListener('focus', () => {
            inputWrapper.classList.add('focused');
        });

        amountInput.addEventListener('blur', () => {
            inputWrapper.classList.remove('focused');
        });

            // Simulate loading
            withdrawBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processing...';
            withdrawBtn.disabled = true;

            setTimeout(() => {
                withdrawBtn.innerHTML = '<i class="fas fa-check"></i> Withdrawal Successful';
                withdrawBtn.style.background = 'linear-gradient(135deg, #00b894, #00cec9)';

                setTimeout(() => {
                    withdrawBtn.innerHTML = '<i class="fas fa-arrow-down"></i> Withdraw Money';
                    withdrawBtn.style.background = 'linear-gradient(135deg, #003366, #0066cc)';
                    withdrawBtn.disabled = false;
                    amountInput.value = '';
                }, 2000);
            }, 1500);
        });

        function showError(message) {
            const errorAlert = document.getElementById('errorAlert');
            const errorMessage = document.getElementById('errorMessage');

            errorMessage.textContent = message;
            errorAlert.style.display = 'block';

            setTimeout(() => {
                errorAlert.style.display = 'none';
            }, 5000);
        }

        function closeAlert() {
            document.getElementById('errorAlert').style.display = 'none';
        }

        // Add number formatting
        amountInput.addEventListener('input', (e) => {
            let value = e.target.value;
            if (value) {
                // Format number with commas
                const formatted = parseFloat(value).toLocaleString('en-US', {
                    minimumFractionDigits: 0,
                    maximumFractionDigits: 2
                });
            }
        });

        // Ripple effect for button
        withdrawBtn.addEventListener('click', function(e) {
            const ripple = document.createElement('span');
            const rect = this.getBoundingClientRect();
            const size = Math.max(rect.width, rect.height);
            const x = e.clientX - rect.left - size / 2;
            const y = e.clientY - rect.top - size / 2;

            ripple.style.width = ripple.style.height = size + 'px';
            ripple.style.left = x + 'px';
            ripple.style.top = y + 'px';
            ripple.classList.add('ripple');

            this.appendChild(ripple);

            setTimeout(() => {
                ripple.remove();
            }, 600);
        });
    </script>
</body>
</html>

